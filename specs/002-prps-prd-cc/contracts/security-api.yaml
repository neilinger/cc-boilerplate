openapi: 3.0.3
info:
  title: CC-Boilerplate Security Validation API
  description: |
    Security validation and chain management API for the CC-Boilerplate Strategic Accelerator Framework.
    Enforces mandatory security validations, audit trails, and prevents dangerous operations.
  version: 1.0.0
  contact:
    name: CC-Boilerplate Framework
    email: neil@scholten.io

servers:
  - url: https://api.cc-boilerplate.dev/v1/security
    description: Production Security API
  - url: https://staging-api.cc-boilerplate.dev/v1/security
    description: Staging Security API

paths:
  /security-chains:
    get:
      summary: List security chains
      description: Retrieve security validation chains with filtering options
      parameters:
        - name: chain_type
          in: query
          description: Filter by chain type
          schema:
            type: string
            enum: [code_execution, data_access, system_modification, external_integration]
        - name: security_level
          in: query
          description: Filter by security level
          schema:
            type: string
            enum: [basic, elevated, critical, maximum]
        - name: active_only
          in: query
          description: Show only active chains
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: List of security chains
          content:
            application/json:
              schema:
                type: object
                properties:
                  security_chains:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityChain'
                  total_count:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create security chain
      description: Define a new security validation chain
      security:
        - SecurityAuth: [security.admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityChainCreate'
      responses:
        '201':
          description: Security chain created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityChain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /security-chains/{chain_id}:
    get:
      summary: Get security chain details
      description: Retrieve detailed information about a security chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Security chain details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityChainDetail'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update security chain
      description: Update security chain configuration (requires high privileges)
      security:
        - SecurityAuth: [security.admin]
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityChainUpdate'
      responses:
        '200':
          description: Security chain updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityChain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /security-chains/{chain_id}/validate:
    post:
      summary: Execute security validation
      description: Run security validation chain against provided context
      security:
        - SecurityAuth: [security.validate]
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityValidationRequest'
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityValidationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          description: Security validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SecurityDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /security-chains/{chain_id}/bypass:
    post:
      summary: Request security bypass
      description: Request bypass of security chain (requires special authorization)
      security:
        - SecurityAuth: [security.bypass]
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityBypassRequest'
      responses:
        '200':
          description: Bypass approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityBypassResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          description: Bypass denied
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SecurityDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /validation-steps:
    get:
      summary: List validation steps
      description: Retrieve available validation step types
      responses:
        '200':
          description: List of validation steps
          content:
            application/json:
              schema:
                type: object
                properties:
                  validation_steps:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidationStepType'
        '500':
          $ref: '#/components/responses/InternalError'

  /audit-logs:
    get:
      summary: Retrieve security audit logs
      description: Get security audit trail with filtering and pagination
      security:
        - SecurityAuth: [audit.read]
      parameters:
        - name: from_date
          in: query
          description: Start date for log range
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          description: End date for log range
          schema:
            type: string
            format: date-time
        - name: chain_id
          in: query
          description: Filter by security chain
          schema:
            type: string
            format: uuid
        - name: event_type
          in: query
          description: Filter by event type
          schema:
            type: string
            enum: [validation, bypass, failure, escalation, emergency]
        - name: security_level
          in: query
          description: Filter by security level
          schema:
            type: string
            enum: [basic, elevated, critical, maximum]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Security audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  audit_logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityAuditLog'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /threat-detection:
    post:
      summary: Report security threat
      description: Submit security threat detection for analysis
      security:
        - SecurityAuth: [security.report]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatReport'
      responses:
        '202':
          description: Threat report accepted for analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    example: "analyzing"
                  priority:
                    type: string
                    enum: [low, medium, high, critical]
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /incident-response:
    post:
      summary: Trigger incident response
      description: Initiate security incident response procedures
      security:
        - SecurityAuth: [security.incident]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTrigger'
      responses:
        '202':
          description: Incident response triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_id:
                    type: string
                    format: uuid
                  response_status:
                    type: string
                    example: "initiated"
                  estimated_resolution:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /security-metrics:
    get:
      summary: Get security metrics
      description: Retrieve security validation metrics and statistics
      security:
        - SecurityAuth: [metrics.read]
      parameters:
        - name: time_range
          in: query
          description: Time range for metrics
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
        - name: metric_type
          in: query
          description: Type of metrics to retrieve
          schema:
            type: string
            enum: [validations, failures, bypasses, threats, incidents]
      responses:
        '200':
          description: Security metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMetrics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    SecurityAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token with security permissions

  schemas:
    SecurityChain:
      type: object
      required:
        - chain_id
        - name
        - description
        - chain_type
        - validation_steps
        - security_level
        - failure_action
        - created_at
        - last_validated
        - validation_frequency_hours
      properties:
        chain_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 5
          maxLength: 50
        description:
          type: string
          minLength: 20
          maxLength: 500
        chain_type:
          type: string
          enum: [code_execution, data_access, system_modification, external_integration]
        validation_steps:
          type: array
          items:
            $ref: '#/components/schemas/ValidationStep'
          minItems: 1
        security_level:
          type: string
          enum: [basic, elevated, critical, maximum]
        bypass_allowed:
          type: boolean
          default: false
        bypass_authorization:
          type: array
          items:
            type: string
            format: uuid
          description: Authorized agent IDs for bypass
        audit_required:
          type: boolean
          default: true
        failure_action:
          type: string
          enum: [block, warn, escalate, abort]
        created_at:
          type: string
          format: date-time
        last_validated:
          type: string
          format: date-time
        validation_frequency_hours:
          type: integer
          minimum: 1
          maximum: 168
        status:
          type: string
          enum: [valid, expired, compromised, disabled]

    SecurityChainDetail:
      allOf:
        - $ref: '#/components/schemas/SecurityChain'
        - type: object
          properties:
            validation_history:
              type: array
              items:
                $ref: '#/components/schemas/ValidationHistoryEntry'
            recent_incidents:
              type: array
              items:
                $ref: '#/components/schemas/SecurityIncident'
            performance_metrics:
              $ref: '#/components/schemas/ChainPerformanceMetrics'

    SecurityChainCreate:
      type: object
      required:
        - name
        - description
        - chain_type
        - validation_steps
        - security_level
        - failure_action
        - validation_frequency_hours
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 50
        description:
          type: string
          minLength: 20
          maxLength: 500
        chain_type:
          type: string
          enum: [code_execution, data_access, system_modification, external_integration]
        validation_steps:
          type: array
          items:
            $ref: '#/components/schemas/ValidationStepCreate'
          minItems: 1
        security_level:
          type: string
          enum: [basic, elevated, critical, maximum]
        bypass_allowed:
          type: boolean
          default: false
        bypass_authorization:
          type: array
          items:
            type: string
            format: uuid
        audit_required:
          type: boolean
          default: true
        failure_action:
          type: string
          enum: [block, warn, escalate, abort]
        validation_frequency_hours:
          type: integer
          minimum: 1
          maximum: 168

    SecurityChainUpdate:
      type: object
      properties:
        description:
          type: string
          minLength: 20
          maxLength: 500
        validation_steps:
          type: array
          items:
            $ref: '#/components/schemas/ValidationStepCreate'
        bypass_allowed:
          type: boolean
        bypass_authorization:
          type: array
          items:
            type: string
            format: uuid
        failure_action:
          type: string
          enum: [block, warn, escalate, abort]
        validation_frequency_hours:
          type: integer
          minimum: 1
          maximum: 168

    ValidationStep:
      type: object
      required:
        - step_name
        - validation_type
        - criteria
        - required
        - timeout_seconds
      properties:
        step_name:
          type: string
          description: Human-readable step name
        validation_type:
          type: string
          enum: [static_analysis, dynamic_check, manual_review, automated_scan, external_service]
        criteria:
          type: string
          description: Validation criteria or rules
        required:
          type: boolean
          description: Whether step failure fails entire chain
        timeout_seconds:
          type: integer
          minimum: 1
          maximum: 3600
        parameters:
          type: object
          description: Step-specific parameters
        weight:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
          default: 1.0

    ValidationStepCreate:
      type: object
      required:
        - step_name
        - validation_type
        - criteria
        - required
        - timeout_seconds
      properties:
        step_name:
          type: string
        validation_type:
          type: string
          enum: [static_analysis, dynamic_check, manual_review, automated_scan, external_service]
        criteria:
          type: string
        required:
          type: boolean
        timeout_seconds:
          type: integer
          minimum: 1
          maximum: 3600
        parameters:
          type: object
        weight:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
          default: 1.0

    ValidationStepType:
      type: object
      properties:
        type_name:
          type: string
        description:
          type: string
        supported_criteria:
          type: array
          items:
            type: string
        default_timeout:
          type: integer
        configuration_schema:
          type: object

    SecurityValidationRequest:
      type: object
      required:
        - context
        - requester_id
      properties:
        context:
          type: object
          description: Context to validate against security chain
        requester_id:
          type: string
          format: uuid
          description: ID of requesting agent or user
        operation_description:
          type: string
          description: Human-readable description of operation
        risk_assessment:
          type: string
          enum: [low, medium, high, critical]
        bypass_reason:
          type: string
          description: Reason if requesting bypass consideration

    SecurityValidationResult:
      type: object
      properties:
        validation_id:
          type: string
          format: uuid
        chain_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [passed, failed, warning, blocked]
        overall_score:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        step_results:
          type: array
          items:
            $ref: '#/components/schemas/ValidationStepResult'
        recommendations:
          type: array
          items:
            type: string
        risk_level:
          type: string
          enum: [low, medium, high, critical]
        action_required:
          type: boolean
        validated_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time

    ValidationStepResult:
      type: object
      properties:
        step_name:
          type: string
        status:
          type: string
          enum: [passed, failed, warning, skipped, error]
        score:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        message:
          type: string
        details:
          type: object
        execution_time_ms:
          type: integer

    SecurityBypassRequest:
      type: object
      required:
        - requester_id
        - bypass_reason
        - operation_description
        - risk_justification
      properties:
        requester_id:
          type: string
          format: uuid
        bypass_reason:
          type: string
          minLength: 20
          maxLength: 1000
          description: Detailed reason for bypass request
        operation_description:
          type: string
          description: Description of operation requiring bypass
        risk_justification:
          type: string
          description: Justification for accepting the risk
        time_sensitive:
          type: boolean
          default: false
        approval_authority:
          type: string
          format: uuid
          description: Requested approver agent ID

    SecurityBypassResult:
      type: object
      properties:
        bypass_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [approved, denied, pending_review]
        approved_by:
          type: string
          format: uuid
        approval_reason:
          type: string
        conditions:
          type: array
          items:
            type: string
          description: Conditions for bypass approval
        expires_at:
          type: string
          format: date-time
        audit_trail:
          type: array
          items:
            $ref: '#/components/schemas/AuditEntry'

    SecurityAuditLog:
      type: object
      properties:
        log_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        event_type:
          type: string
          enum: [validation, bypass, failure, escalation, emergency, incident]
        chain_id:
          type: string
          format: uuid
        requester_id:
          type: string
          format: uuid
        security_level:
          type: string
          enum: [basic, elevated, critical, maximum]
        status:
          type: string
        details:
          type: object
        risk_level:
          type: string
          enum: [low, medium, high, critical]
        resolution:
          type: string
        correlation_id:
          type: string
          format: uuid

    AuditEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        action:
          type: string
        actor_id:
          type: string
          format: uuid
        details:
          type: object

    ValidationHistoryEntry:
      type: object
      properties:
        validation_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        status:
          type: string
        score:
          type: number
          format: float
        duration_ms:
          type: integer

    SecurityIncident:
      type: object
      properties:
        incident_id:
          type: string
          format: uuid
        severity:
          type: string
          enum: [low, medium, high, critical]
        status:
          type: string
          enum: [open, investigating, resolved, closed]
        description:
          type: string
        occurred_at:
          type: string
          format: date-time

    ChainPerformanceMetrics:
      type: object
      properties:
        total_validations:
          type: integer
        success_rate:
          type: number
          format: float
        average_execution_time_ms:
          type: integer
        failure_rate:
          type: number
          format: float
        bypass_rate:
          type: number
          format: float

    ThreatReport:
      type: object
      required:
        - threat_type
        - severity
        - description
        - source
      properties:
        threat_type:
          type: string
          enum: [malicious_code, data_breach, unauthorized_access, privilege_escalation, injection_attack]
        severity:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
          minLength: 50
          maxLength: 2000
        source:
          type: object
          description: Source information about the threat
        affected_resources:
          type: array
          items:
            type: string
        evidence:
          type: object
          description: Supporting evidence for the threat
        reporter_id:
          type: string
          format: uuid

    IncidentTrigger:
      type: object
      required:
        - incident_type
        - severity
        - description
        - trigger_source
      properties:
        incident_type:
          type: string
          enum: [security_breach, system_compromise, data_leak, unauthorized_operation]
        severity:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
          minLength: 50
          maxLength: 2000
        trigger_source:
          type: object
          description: Source that triggered the incident
        affected_systems:
          type: array
          items:
            type: string
        immediate_actions:
          type: array
          items:
            type: string
        escalation_required:
          type: boolean
          default: false

    SecurityMetrics:
      type: object
      properties:
        time_range:
          type: string
        total_validations:
          type: integer
        successful_validations:
          type: integer
        failed_validations:
          type: integer
        bypass_requests:
          type: integer
        bypass_approvals:
          type: integer
        threat_reports:
          type: integer
        security_incidents:
          type: integer
        average_validation_time:
          type: number
          format: float
        top_failure_reasons:
          type: array
          items:
            type: object
            properties:
              reason:
                type: string
              count:
                type: integer
        security_trends:
          type: object
          description: Trending security data

    Pagination:
      type: object
      properties:
        page:
          type: integer
        per_page:
          type: integer
        total_pages:
          type: integer
        total_count:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid request parameters"
              details:
                type: array
                items:
                  type: string
              validation_errors:
                type: object

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Security chain not found"
              resource_id:
                type: string

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Insufficient security clearance"
              required_permission:
                type: string

    SecurityDenied:
      description: Security validation failed
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Security validation failed"
              validation_results:
                $ref: '#/components/schemas/SecurityValidationResult'
              remediation_steps:
                type: array
                items:
                  type: string

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
              request_id:
                type: string
                format: uuid