openapi: 3.0.0
info:
  title: CC-Boilerplate Security Validation API
  version: 1.0.0
  description: API for security validation chains and audit logging

paths:
  /security/validate:
    post:
      summary: Validate operation through security chain
      operationId: validateSecurity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  enum: [create, modify, delete, execute]
                target:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [file, command, workflow]
                    path:
                      type: string
                    content:
                      type: string
                context:
                  type: object
                  properties:
                    agent:
                      type: string
                    user:
                      type: string
                    reason:
                      type: string
              required:
                - operation
                - target
      responses:
        '200':
          description: Validation passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '403':
          description: Validation failed - operation blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'

  /security/patterns:
    get:
      summary: List dangerous patterns
      operationId: listPatterns
      responses:
        '200':
          description: List of patterns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DangerousPattern'

    post:
      summary: Add dangerous pattern
      operationId: addPattern
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DangerousPattern'
      responses:
        '201':
          description: Pattern added
        '409':
          description: Pattern already exists

  /security/audit:
    get:
      summary: Query audit log
      operationId: queryAudit
      parameters:
        - name: startTime
          in: query
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          schema:
            type: string
            format: date-time
        - name: agent
          in: query
          schema:
            type: string
        - name: severity
          in: query
          schema:
            type: string
            enum: [info, warning, error, critical]
      responses:
        '200':
          description: Audit entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEntry'

  /security/bypass:
    post:
      summary: Request temporary security bypass
      operationId: requestBypass
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pattern:
                  type: string
                duration:
                  type: integer
                  description: Duration in seconds
                reason:
                  type: string
              required:
                - pattern
                - reason
      responses:
        '200':
          description: Bypass granted
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresAt:
                    type: string
                    format: date-time
        '403':
          description: Bypass denied

components:
  schemas:
    ValidationResult:
      type: object
      properties:
        passed:
          type: boolean
        level:
          type: string
          enum: [info, warning, error, block]
        violations:
          type: array
          items:
            type: object
            properties:
              rule:
                type: string
              severity:
                type: string
              message:
                type: string
        auditId:
          type: string
          description: Reference to audit log entry

    DangerousPattern:
      type: object
      properties:
        id:
          type: string
        pattern:
          type: string
          description: Regex pattern
        category:
          type: string
          enum: [filesystem, command, credential, network]
        severity:
          type: string
          enum: [warning, error, critical]
        description:
          type: string
        examples:
          type: array
          items:
            type: string
        mitigation:
          type: string
      required:
        - pattern
        - category
        - severity

    AuditEntry:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        agent:
          type: string
        user:
          type: string
        operation:
          type: string
        target:
          type: string
        result:
          type: string
          enum: [allowed, blocked, bypassed]
        severity:
          type: string
          enum: [info, warning, error, critical]
        details:
          type: object