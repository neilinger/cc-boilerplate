{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(uv:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(npm:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Write",
      "Edit",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(git push:*)",
      "mcp__ElevenLabs__text_to_speech",
      "mcp__ElevenLabs__check_subscription",
      "Read(/Users/neil/.claude/**)",
      "WebSearch",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__serena__list_dir",
      "mcp__serena__find_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__write_memory",
      "mcp__ElevenLabs__play_audio",
      "Bash(gh repo rename:*)",
      "Bash(git remote set-url:*)",
      "Bash(git tag:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:*)",
      "WebFetch(domain:www.google.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:arxiv.org)",
      "WebFetch(domain:news.ycombinator.com)",
      "mcp__Ref__ref_search_documentation",
      "mcp__Ref__ref_read_url"
    ],
    "deny": [],
    "__PROJECT_CUSTOM_PERMISSIONS__": []
  },
  "statusLine": {
    "type": "command",
    "command": "uv run $CLAUDE_PROJECT_DIR/.claude/status_lines/status_line_v3.py",
    "padding": 0
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": ["ElevenLabs"],
  "outputStyle": "TTS Summary",
  "__PROJECT_CUSTOM_SETTINGS__": {},
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/pre_tool_use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/post_tool_use.py"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/notification.py --notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/stop.py --chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/subagent_stop.py --notify"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/user_prompt_submit.py --log-only --store-last-prompt --name-agent"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/pre_compact.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run $CLAUDE_PROJECT_DIR/.claude/hooks/session_start.py"
          }
        ]
      }
    ],
    "__PROJECT_CUSTOM_HOOKS__": {}
  }
}
